CREATE TABLE HOST (
--ID INTEGER NOT NULL AUTO_INCREMENT,
ID IDENTITY NOT NULL,
ADDRESS VARCHAR(1000),
PORT INTEGER(6),
COMMAND CHAR(1),
primary key (ID)
);
CREATE INDEX IX_HOST_ADDRESS ON HOST (ADDRESS);

CREATE TABLE USER (
--ID INTEGER NOT NULL AUTO_INCREMENT,
ID IDENTITY NOT NULL,
NAME VARCHAR(500),
EMAIL VARCHAR(500),
PASSWORD VARCHAR(500),
ACTIVE CHAR(1),
TIMEZONE INTEGER(3),
TOKEN VARCHAR(100),
primary key (ID)
);
CREATE INDEX IX_USER_EMAIL ON USER (EMAIL);
CREATE INDEX IX_USER_TOKEN ON USER (TOKEN);

CREATE TABLE AUTH_LINK (
KEY VARCHAR(500),
USER_ID INTEGER,
GENERATION_DATE TIMESTAMP,
primary key (KEY),
CONSTRAINT FK_AUTH_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);
CREATE INDEX IX_AUTH_GENERATION ON AUTH_LINK (GENERATION_DATE);


CREATE TABLE USER_HOST (
USER_ID INTEGER,
HOST_ID INTEGER,
TITLE VARCHAR(500),
PAID_UNTIL DATE,
primary key (USER_ID,HOST_ID),
CONSTRAINT FK_UH_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID),
CONSTRAINT FK_UH_HOST FOREIGN KEY (HOST_ID) REFERENCES HOST(ID)
);
CREATE INDEX IX_UH_PAID_UNTIL ON USER_HOST (PAID_UNTIL);


CREATE TABLE HOST_STATUS (
ID CHAR(36), -- DATE, TIME WITH MS, HOST_ID
HOST_ID INTEGER,
START TIMESTAMP,
FINISH TIMESTAMP,
ONLINE CHAR(1),
primary key (ID),
CONSTRAINT FK_HS_HOST FOREIGN KEY (HOST_ID) REFERENCES HOST(ID)
);
CREATE INDEX IX_HS_HOST_START ON HOST_STATUS (HOST_ID,START);


CREATE TABLE PING (
ID CHAR(36), -- DATE, TIME WITH MS, HOST_ID
HOST_ID INTEGER,
WHEN TIMESTAMP,
MS INTEGER,
primary key (ID),
CONSTRAINT FK_PING_HOST FOREIGN KEY (HOST_ID) REFERENCES HOST(ID)
);
CREATE INDEX IX_PING_HOST_WHEN ON PING (HOST_ID,WHEN);
